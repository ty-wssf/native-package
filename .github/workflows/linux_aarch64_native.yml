name: Build for aarch64

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    name: Build - ${{ matrix.os }} - ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}-${{ matrix.arch }} # 指定运行器为aarch64架构

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install aarch64 Toolchain
        run: sudo apt update && sudo apt install g++-aarch64-linux-gnu qemu qemu-user qemu-user-static
      - name: Install Clang 17
        run: |
          wget https://apt.llvm.org/llvm.sh
          chmod +x ./llvm.sh
          sudo ./llvm.sh 17
      - name: Configure
        run: cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -DRPP_TEST=ON -DRPP_QEMU=ON
        env:
          CXX: clang++-17 --target=aarch64-linux-gnu
          CXXFLAGS: -march=armv8-a
          AR: aarch64-linux-gnu-ar
          AS: aarch64-linux-gnu-as
          LD: aarch64-linux-gnu-ld
          STRIP: aarch64-linux-gnu-strip

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-${{ matrix.arch }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-${{ matrix.arch }}-m2

      - name: Set up JDK for GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '21.0.1'
          distribution: 'graalvm'
          cache: maven

      - name: Build with Maven
        run: mvn -B install --file pom.xml

      - name: Build with Maven (app)
        run: |
          export MAVEN_OPTS="-Duser.language=UTF-8 -Dfile.encoding=UTF-8"
          cd hj-rminf-app
          mvn clean package --P native --file pom.xml --no-transfer-progress

      - name: Upload artifacts app
        uses: actions/upload-artifact@v3
        with:
          name: app-artifacts
          path: hj-rminf-app/target/
          if-no-files-found: error